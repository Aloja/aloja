#load cluster defaults
source "$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/cluster_defaults.conf"

#Cluster config
defaultProvider="vagrant"

cluster_id_tmp="$(basename $BASH_SOURCE)" #get the cluster id from the file name
clusterID="${cluster_id_tmp:(-7):2}"
clusterName="vagrant-${clusterID}"
numberOfNodes="1" #starts at 0 (max 99)

nodeNames="$(seq -f "$clusterName-%02g" 0 "$numberOfNodes")"

#Node config
vmSize='vagrant-1CPU1GB' #just a descriptor

attachedVolumes="0"
diskSize=""


#globals (unique per VM)
extraLocalCommands=""

#extraConfig
#noSudo="true" #if present deploy scripts will try not to invoque sudo

#details
vmCores="1"
vmRAM="1" #in GB

#costs
clusterCostHour="0.2" #invented number
clusterType="IaaS"
clusterDescription="Vagrant VMs for local testing"

#Deploy Modifyers
#noParallelDeploy="true" #set to true to prevent provisioning to happen in parallel for a cluster
#noParallelProvision="true" #set to true to prevent provisioning to happen in parallel for a cluster

#queueJobs="" #enable on cluster config to queue benchmarks after deploy

#benchmark settings overrides
CLUSTER_DISKS="HDD HD2 HD3 RL1 RL2 RL3 SSD HS1 HS2 HS3" #for simulating/testing multiple disks scenarios
CLUSTER_NETS="ETH IB"
BENCH_SOURCE_DIR="$BENCH_SHARE_DIR/aplic" #in vagrant use the same

#BENCH_LOCAL_DIR="/tmp"
#BENCH_LOCAL_DIR="$BENCH_ BASE_DIR"

#make sure in our local VM we run the minimal version


JAVA_XMS="-Xms512m"
JAVA_XMX="-Xmx512m"

MAX_MAPS="1"

#Hadop2 config params
PHYS_MEM=1536
NUM_CORES=8
CONTAINER_MIN_MB=612
CONTAINER_MAX_MB=1536
MAPS_MB=612
REDUCES_MB=612
AM_MB=356

JAVA_AM_XMS=-Xms200m
JAVA_AM_XMX=-Xmx200m

#2GB in tpch vagrant, minimum accepted value
TPCH_SCALE_FACTOR=2
