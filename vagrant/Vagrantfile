# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # Every Vagrant virtual environment requires a box to build off of.
    config.vm.box = "azure"
    config.vm.provider :azure do |azure|
        azure.mgmt_certificate = 'keys/mgmkey.pem'
        azure.mgmt_endpoint = 'https://management.core.windows.net'
	azure.subscription_id = 'd430f76b-00b7-444b-a2d2-c5f100060625'
        azure.storage_acct_name = 'azurealojastorageyjceu' # optional. A new one will be generated if not provided.

        azure.vm_image = 'b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu-12_04_4-LTS-amd64-server-20140428-en-us-30GB'
        azure.vm_user = '' # defaults to 'vagrant' if not provided
        azure.vm_password = '' # min 8 characters. should contain a lower case letter, an uppercase letter, a number and a special character

        azure.vm_name = 'azureAloja' # max 15 characters. contains letters, number and hyphens. can start with letters and can end with letters and numbers
        azure.cloud_service_name = 'vagrantAlojaCloud' # same as vm_name. leave blank to auto-generate
        azure.deployment_name = 'vagrantAlojaCloud' # defaults to cloud_service_name
        azure.vm_location = 'West Europe' # e.g., West US
        azure.ssh_private_key_file = 'keys/management.key'
	azure.ssh_certificate_file = 'keys/management.cer' 
        # Provide the following values if creating a *Nix VM
        azure.ssh_port = '22'

        # Provide the following values if creating a Windows VM
        #azure.winrm_transport = [ 'http', 'https' ] # this will open up winrm ports on both http (5985) and http (5986) ports
        #azure.winrm_https_port = 'A VALID PUBLIC PORT' # customize the winrm https port, instead of 5986
        #azure.winrm_http_port = 'A VALID PUBLIC PORT' # customize the winrm http port, insted of 5985

        #azure.tcp_endpoints = '3389:53389' # opens the Remote Desktop internal port that listens on public port 53389. Without this, you cannot RDP to a Windows VM.
    end

    config.ssh.username = '' # the one used to create the VM
    config.ssh.password = '' # the one used to create the VM

  #config.vm.box = "yungsang/coreos"
  #
  #config.vm.provision "docker" do |d|
  #  d.build_dir "."
  #  #d.build_image "/vagrant/app"
  #end

  config.vm.host_name = "vagrant"

  #web document root
  config.vm.synced_folder "../", "/vagrant/workspace"

  #bash scripts
  config.vm.provision :shell, :path => "bootstrap.sh"

  #puppet config
  config.vm.provision "puppet" do |puppet|
    puppet.module_path = "puppet/modules"
    puppet.manifests_path = "puppet/manifests"
    puppet.manifest_file = "init.pp"
    puppet.options = "--environment prod" 
   #puppet.options = "--verbose --debug"
  end

  #net ports
  #config.vm.network :forwarded_port, host: 8080, guest: 80 #web
  #config.vm.network :forwarded_port, host: 4306, guest: 3306 #mysql
end
