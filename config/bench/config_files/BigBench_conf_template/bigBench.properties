#"INTEL CONFIDENTIAL"
#Copyright 2016 Intel Corporation All Rights Reserved.
#
#The source code contained or described herein and all documents related to the source code ("Material") are owned by Intel Corporation or its suppliers or licensors. Title to the Material remains with Intel Corporation or its suppliers and licensors. The Material contains trade secrets and proprietary and confidential information of Intel or its suppliers and licensors. The Material is protected by worldwide copyright and trade secret laws and treaty provisions. No part of the Material may be used, copied, reproduced, modified, published, uploaded, posted, transmitted, distributed, or disclosed in any way without Intel's prior express written permission.
#
#No license under any patent, copyright, trade secret or other intellectual property right is granted to or conferred upon you by disclosure or delivery of the Materials, either expressly, by implication, inducement, estoppel or otherwise. Any license under such intellectual property rights must be express and approved by Intel in writing.

pretend_mode=0
show_command_stdout=0


# configure the workload the driver performs
# options:
# CLEAN_ALL: clean all BigBench related data (metastore, HDFS) (WARNING: no confirmation, this is "fire and forget"!!! It will DELETE EVERYTHING BigBench related)
# ENGINE_VALIDATION_CLEAN_POWER_TEST: clean all query results from a previous engine validation power test
# ENGINE_VALIDATION_CLEAN_LOAD_TEST: clean all metastore tables of the engine validation run
# ENGINE_VALIDATION_CLEAN_DATA: clean all generated data in HDFS
# ENGINE_VALIDATION_DATA_GENERATION: generate data for the engine validation run
# ENGINE_VALIDATION_LOAD_TEST: load the generated data into the metastore for the engine validation run
# ENGINE_VALIDATION_POWER_TEST: run all queries on one thread
# ENGINE_VALIDATION_RESULT_VALIDATION: validate the engine validation power test results
# CLEAN_POWER_TEST: clean all query results from a previous power test
# CLEAN_THROUGHPUT_TEST_1: clean all query results from a previous first throughput test
# CLEAN_THROUGHPUT_TEST_2: clean all query results from a previous second throughput test
# CLEAN_LOAD_TEST: clean all metastore tables
# CLEAN_DATA: clean all generated data in HDFS
# DATA_GENERATION: generate data
# BENCHMARK_START: start timestamp for complete benchmark runtime (note: if not specified, driver automatically adds it to the head of the list)
# BENCHMARK_STOP: stop timestamp for complete benchmark runtime (note: if not specified, driver automatically adds it to the tail of the list)
# LOAD_TEST: load the generated data into the metastore
# POWER_TEST: run all queries on one thread
# THROUGHPUT_TEST_1: first run of all queries on NUMBER_OF_PARALLEL_STREAMS concurrent streams
# THROUGHPUT_TEST_REFRESH: refresh the dataset in the metastore
# THROUGHPUT_TEST_2: second run of all queries on NUMBER_OF_PARALLEL_STREAMS concurrent streams
# VALIDATE_POWER_TEST: validate the power test results
# VALIDATE_THROUGHPUT_TEST_1: validate the first throughput test results
# VALIDATE_THROUGHPUT_TEST_2: validate the second throughput test results
# SHOW_TIMES: show query run times
# SHOW_ERRORS: show query errors
# SHOW_VALIDATION: show the validation result

#######################################################################
# WARNING: it is generally a good idea to start with a clean state.   #
# Therefore CLEAN_ALL is specified here.                              #
# At least before a DATA_GENERATION, CLEAN_DATA is HIGHLY recommended!#
#######################################################################

#workload=CLEAN_ALL,ENGINE_VALIDATION_DATA_GENERATION,ENGINE_VALIDATION_LOAD_TEST,ENGINE_VALIDATION_POWER_TEST,ENGINE_VALIDATION_RESULT_VALIDATION,CLEAN_DATA,DATA_GENERATION,BENCHMARK_START,LOAD_TEST,POWER_TEST,THROUGHPUT_TEST_1,THROUGHPUT_TEST_REFRESH,THROUGHPUT_TEST_2,BENCHMARK_STOP,VALIDATE_POWER_TEST,VALIDATE_THROUGHPUT_TEST_1,VALIDATE_THROUGHPUT_TEST_2
workload=CLEAN_ALL,ENGINE_VALIDATION_DATA_GENERATION,ENGINE_VALIDATION_LOAD_TEST,ENGINE_VALIDATION_POWER_TEST,ENGINE_VALIDATION_RESULT_VALIDATION,CLEAN_DATA,DATA_GENERATION,BENCHMARK_START,LOAD_TEST,POWER_TEST,THROUGHPUT_TEST_1,BENCHMARK_STOP,VALIDATE_POWER_TEST,VALIDATE_THROUGHPUT_TEST_1


# Here the query order of the different phases is defined
# The format is: phase name pattern + "_" + stream number
# power_test_0 is the basic list used for shuffling, it must ALWAYS be defined
power_test_0=1-30

# You may specify any number additional properties for the throughput test(s) here
# They have the form "throughput_test_1_$STREAMNUMBER=..." and "throughput_test_2_$STREAMNUMBER=..."
# Examples:
#throughput_test_1_0=1,3,5,7,9,...
#throughput_test_1_1=2,4,6,8,10,...
#throughput_test_2_0=10-15,20-25,...
#throughput_test_2_1=30-26,5-1,...


#throughput_test_1_0=15,21,22,13,12,23,6,11,9,14,17,7,24,16
#throughput_test_1_1=12,16,9,13,11,15,6,14,23,7,24,21,17,22
#throughput_test_1_2=16,17,15,7,13,23,14,12,24,21,9,22,11,6
#throughput_test_1_3=6,9,13,17,16,12,21,7,24,15,11,22,14,23
#throughput_test_1_4=24,17,7,6,16,22,13,23,12,14,11,21,15,9
#throughput_test_1_5=23,21,14,6,9,11,13,22,12,17,7,15,24,16
#throughput_test_1_6=23,22,15,9,7,13,24,16,6,11,12,21,14,17
#throughput_test_1_7=11,9,22,14,17,21,16,7,12,15,13,24,6,23

throughput_test_1_0=15,21,22,13,12,23,6,11,9,14,17,7,24,16
throughput_test_1_1=12,16,9,13,11,15,6,14,23,7,24,21,17,22
throughput_test_1_2=16,17,15,7,13,23,14,12,24,21,9,22,11,6
throughput_test_1_3=6,9,13,17,16,12,21,7,24,15,11,22,14,23
throughput_test_1_4=24,17,7,6,16,22,13,23,12,14,11,21,15,9
throughput_test_1_5=23,21,14,6,9,11,13,22,12,17,7,15,24,16
throughput_test_1_6=23,22,15,9,7,13,24,16,6,11,12,21,14,17
throughput_test_1_7=11,9,22,14,17,21,16,7,12,15,13,24,6,23
throughput_test_1_8=9,13,6,16,21,14,22,15,17,23,7,24,11,12
throughput_test_1_9=17,12,13,22,11,6,14,23,21,7,9,24,16,15
throughput_test_1_10=6,23,12,17,21,15,16,11,7,22,13,9,24,14
throughput_test_1_11=11,12,6,13,21,9,7,22,17,24,15,23,14,16
throughput_test_1_12=9,17,24,14,23,16,7,6,13,21,12,11,15,22
throughput_test_1_13=21,22,14,11,13,17,7,15,6,9,23,12,24,16
throughput_test_1_14=7,11,21,22,12,24,15,14,23,13,16,9,17,6
throughput_test_1_15=14,7,12,17,22,6,15,11,13,21,9,16,23,24
throughput_test_1_16=6,16,21,22,24,13,12,17,9,14,23,7,15,11
throughput_test_1_17=22,16,6,24,11,17,15,14,23,12,21,13,7,9
throughput_test_1_18=16,24,9,15,23,11,7,13,21,6,22,12,14,17
throughput_test_1_19=24,17,16,9,21,14,23,12,15,11,7,13,22,27
throughput_test_1_20=23,9,6,13,22,11,7,15,16,12,21,17,14,24
throughput_test_1_21=6,14,23,9,16,15,13,7,21,17,11,22,24,12
throughput_test_1_22=17,16,11,23,9,15,22,24,13,14,7,12,21,10
throughput_test_1_23=35,12,21,14,6,7,11,13,23,24,16,15,22,9
throughput_test_1_24=13,15,21,11,14,22,9,23,17,12,7,6,16,24
throughput_test_1_25=23,6,13,17,14,16,11,7,12,16,24,21,22,9
throughput_test_1_26=14,6,21,12,11,13,24,17,9,7,16,23,22,15
throughput_test_1_27=13,15,11,9,16,7,24,23,6,17,12,22,21,14
throughput_test_1_28=14,6,9,12,21,15,11,23,24,16,13,22,7,17
throughput_test_1_29=23,24,21,13,17,11,16,7,14,9,15,6,22,12
throughput_test_1_30=17,23,7,21,14,22,13,12,24,11,16,6,9,15
throughput_test_1_31=16,14,11,12,17,24,9,6,22,23,13,7,15,21