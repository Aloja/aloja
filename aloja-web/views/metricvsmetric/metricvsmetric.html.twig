{% extends "layout.html.twig"%}
{% block stylesheet %}
	{{ parent() }}
	<style type="text/css">
	  @import "js/bootstrap-slider/css/bootstrap-slider.css";
	  #sw_filters .row {
	  	margin-bottom: 1em;
	  }
	</style>
{% endblock %}
{% block content %}
 <form method="get"role="form"class="form-inline">
  <div style="float: left; width: 78%;">
    <div class="row" style="margin-left: .5em; margin-bottom: 1em;">
     <div class="col-md-5">
       <div class="row">
	   MetricaX: <select name="metricax"class="form-control">
	   				<option value="e.maps"unit="maps">Maps</option>
	   				<option value="e.exe_time"unit="s">Execution time</option>
	   				<option value="e.blk_size"unit="MB">Block size</option>
	   				<option value="e.iosf"unit=" ">IO Sort Factor</option>
	   				<option value="e.replication"unit=" ">Replication</option>
	   				<option value="e.iofilebuf"unit="MB">IO File Buffer</option>
	   			    <option value="j.`Bytes Read`"unit="bytes" aggr="true">MB Read</option>
				    <option value="j.`Bytes Written`"unit="bytes" aggr="true">MB Written</option>
				    <option value="j.`FILE_BYTES_WRITTEN`"unit="bytes" aggr="true">File MB written</option>
				    <option value="j.`FILE_BYTES_READ`"unit="bytes" aggr="true">File MB read</option>
				    <option value="j.`HDFS_BYTES_WRITTEN`"unit="bytes" aggr="true">HDFS MB written</option>
				    <option value="j.`HDFS_BYTES_READ`"unit="bytes" aggr="true">HDFS MB read</option>
				    <option value="j.`Spilled Records`" unit=" " aggr="true">Spilled Records</option>
				    <option value="j.`SPLIT_RAW_BYTES`"unit="bytes" aggr="true">Split raw MB</option>
	  			    <option value="j.`Map input records`" unit=" " aggr="true">Map input records</option>
				    <option value="j.`Map output records`" unit=" " aggr="true">Map output records</option>
				    <option value="j.`Map input bytes`"unit="bytes" aggr="true">Map input MB</option>
				    <option value="j.`Map output bytes`"unit="bytes" aggr="true">Map output MB</option>
				    <option value="j.`Map output materialized bytes`" unit=" " aggr="true">Map ouptut materialized MB</option>
				    <option value="j.`Reduce input groups`" unit=" " aggr="true">Reduce input groups</option>
				    <option value="j.`Reduce output records`" unit=" " aggr="true">Reduce output records</option>
				    <option value="j.`Reduce shuffle bytes`" unit="bytes" aggr="true">Reduce shuffle MB</option>
				    <option value="j.`Combine input records`" unit=" " aggr="true">Combine input records</option>
				    <option value="j.`Combine output records`" unit=" " aggr="true">Combine output records</option>
	   			</select>
	   			<span id="aggrx">
			   	 Aggr: <select name="aggrx" class="form-control">
			   	 			<option value="SUM">Sum</option>
			   	 			<option value="AVG">Average</option>
			   	 			<option value="STDDEV_POP">Standard deviation</option>
			   	 			<option value="VAR_POP">Variance</option>
			   	 		</select>
	   			</span>
	   	 </div>
	   	 <br />
	   	 <div class="row">
	   	 Operation:<select name="opx" class="form-control">
	   				    <option value=""> </option>
	   	 				<option value="+">+</option>
	   	 				<option value="-">-</option>
	   	 				<option value="*">*</option>
	   	 				<option value="/">/</option>
	   	 			</select>
	   	 </div>
	   	 <br />
	   	 <div class="row">
	   	 Metrica: <select name="metricax2"class="form-control">
	   				<option value="e.maps"unit="maps">Maps</option>
	   				<option value="e.exe_time"unit="s">Execution time</option>
	   				<option value="e.blk_size"unit="MB">Block size</option>
	   				<option value="e.iosf"unit=" ">IO Sort Factor</option>
	   				<option value="e.replication"unit=" ">Replication</option>
	   				<option value="e.iofilebuf"unit="MB">IO File Buffer</option>
	   			    <option value="j.`Bytes Read`"unit="bytes" aggr="true">MB Read</option>
				    <option value="j.`Bytes Written`"unit="bytes" aggr="true">MB Written</option>
				    <option value="j.`FILE_BYTES_WRITTEN`"unit="bytes" aggr="true">File MB written</option>
				    <option value="j.`FILE_BYTES_READ`"unit="bytes" aggr="true">File MB read</option>
				    <option value="j.`HDFS_BYTES_WRITTEN`"unit="bytes" aggr="true">HDFS MB written</option>
				    <option value="j.`HDFS_BYTES_READ`"unit="bytes" aggr="true">HDFS MB read</option>
				    <option value="j.`Spilled Records`" unit=" " aggr="true">Spilled Records</option>
				    <option value="j.`SPLIT_RAW_BYTES`"unit="bytes" aggr="true">Split raw MB</option>
	  			    <option value="j.`Map input records`" unit=" " aggr="true">Map input records</option>
				    <option value="j.`Map output records`" unit=" " aggr="true">Map output records</option>
				    <option value="j.`Map input bytes`"unit="bytes" aggr="true">Map input MB</option>
				    <option value="j.`Map output bytes`"unit="bytes" aggr="true">Map output MB</option>
				    <option value="j.`Map output materialized bytes`" unit=" " aggr="true">Map ouptut materialized MB</option>
				    <option value="j.`Reduce input groups`" unit=" " aggr="true">Reduce input groups</option>
				    <option value="j.`Reduce output records`" unit=" " aggr="true">Reduce output records</option>
				    <option value="j.`Reduce shuffle bytes`" unit="bytes" aggr="true">Reduce shuffle MB</option>
				    <option value="j.`Combine input records`" unit=" " aggr="true">Combine input records</option>
				    <option value="j.`Combine output records`" unit=" " aggr="true">Combine output records</option>
	   			</select>
	   			<span id="aggrx2">
			   	 Aggr: <select name="aggrx2" class="form-control">
			   	 			<option value="SUM">Sum</option>
			   	 			<option value="AVG">Average</option>
			   	 			<option value="STDDEV_POP">Standard deviation</option>
			   	 			<option value="VAR_POP">Variance</option>
			   	 		</select>
	   			</span>
	   		</div>
	  </div>
	  <div class="col-md-5">
	   <div class="row">
	   MetricaY:<select name="metricay" class="form-control">
	   				<option value="e.maps"unit="maps">Maps</option>
	   				<option value="e.exe_time"unit="s">Execution time</option>
	   				<option value="e.blk_size"unit="MB">Block size</option>
	   				<option value="e.iosf"unit=" ">IO Sort Factor</option>
	   				<option value="e.replication"unit=" ">Replication</option>
	   				<option value="e.iofilebuf"unit="MB">IO File Buffer</option>
	   			    <option value="j.`Bytes Read`"unit="bytes" aggr="true">MB Read</option>
				    <option value="j.`Bytes Written`"unit="bytes" aggr="true">MB Written</option>
				    <option value="j.`FILE_BYTES_WRITTEN`"unit="bytes" aggr="true">File MB written</option>
				    <option value="j.`FILE_BYTES_READ`"unit="bytes" aggr="true">File MB read</option>
				    <option value="j.`HDFS_BYTES_WRITTEN`"unit="bytes" aggr="true">HDFS MB written</option>
				    <option value="j.`HDFS_BYTES_READ`"unit="bytes" aggr="true">HDFS MB read</option>
				    <option value="j.`Spilled Records`" unit=" " aggr="true">Spilled Records</option>
				    <option value="j.`SPLIT_RAW_BYTES`"unit="bytes" aggr="true">Split raw MB</option>
	  			    <option value="j.`Map input records`" unit=" " aggr="true">Map input records</option>
				    <option value="j.`Map output records`" unit=" " aggr="true">Map output records</option>
				    <option value="j.`Map input bytes`"unit="bytes" aggr="true">Map input MB</option>
				    <option value="j.`Map output bytes`"unit="bytes" aggr="true">Map output MB</option>
				    <option value="j.`Map output materialized bytes`" unit=" " aggr="true">Map ouptut materialized MB</option>
				    <option value="j.`Reduce input groups`" unit=" " aggr="true">Reduce input groups</option>
				    <option value="j.`Reduce output records`" unit=" " aggr="true">Reduce output records</option>
				    <option value="j.`Reduce shuffle bytes`" unit="bytes" aggr="true">Reduce shuffle MB</option>
				    <option value="j.`Combine input records`" unit=" " aggr="true">Combine input records</option>
				    <option value="j.`Combine output records`" unit=" " aggr="true">Combine output records</option>
	   			</select>
	   			<span id="aggry">
			   	 Aggr: <select name="aggry" class="form-control">
			   	 			<option value="SUM">Sum</option>
			   	 			<option value="AVG">Average</option>
			   	 			<option value="STDDEV_POP">Standard deviation</option>
			   	 			<option value="VAR_POP">Variance</option>
			   	 		</select>
	   			</span>
	   	  </div>
	   	 <br />
	   	 <div class="row">
	   	 Operation: <select name="opy" class="form-control">
	   	 				<option value=""> </option>
	   	 				<option value="+">+</option>
	   	 				<option value="-">-</option>
	   	 				<option value="*">*</option>
	   	 				<option value="/">/</option>
	   	 			</select>
	   	 </div>
	   	 <br />
	   	 <div class="row">
	   	 Metrica: <select name="metricay2"class="form-control">
	   				<option value="e.maps"unit="maps">Maps</option>
	   				<option value="e.exe_time"unit="s">Execution time</option>
	   				<option value="e.blk_size"unit="MB">Block size</option>
	   				<option value="e.iosf"unit=" ">IO Sort Factor</option>
	   				<option value="e.replication"unit=" ">Replication</option>
	   				<option value="e.iofilebuf"unit="MB">IO File Buffer</option>
	   			    <option value="j.`Bytes Read`"unit="bytes" aggr="true">MB Read</option>
				    <option value="j.`Bytes Written`"unit="bytes" aggr="true">MB Written</option>
				    <option value="j.`FILE_BYTES_WRITTEN`"unit="bytes" aggr="true">File MB written</option>
				    <option value="j.`FILE_BYTES_READ`"unit="bytes" aggr="true">File MB read</option>
				    <option value="j.`HDFS_BYTES_WRITTEN`"unit="bytes" aggr="true">HDFS MB written</option>
				    <option value="j.`HDFS_BYTES_READ`"unit="bytes" aggr="true">HDFS MB read</option>
				    <option value="j.`Spilled Records`" unit=" " aggr="true">Spilled Records</option>
				    <option value="j.`SPLIT_RAW_BYTES`"unit="bytes" aggr="true">Split raw MB</option>
	  			    <option value="j.`Map input records`" unit=" " aggr="true">Map input records</option>
				    <option value="j.`Map output records`" unit=" " aggr="true">Map output records</option>
				    <option value="j.`Map input bytes`"unit="bytes" aggr="true">Map input MB</option>
				    <option value="j.`Map output bytes`"unit="bytes" aggr="true">Map output MB</option>
				    <option value="j.`Map output materialized bytes`" unit=" " aggr="true">Map ouptut materialized MB</option>
				    <option value="j.`Reduce input groups`" unit=" " aggr="true">Reduce input groups</option>
				    <option value="j.`Reduce output records`" unit=" " aggr="true">Reduce output records</option>
				    <option value="j.`Reduce shuffle bytes`" unit="bytes" aggr="true">Reduce shuffle MB</option>
				    <option value="j.`Combine input records`" unit=" " aggr="true">Combine input records</option>
				    <option value="j.`Combine output records`" unit=" " aggr="true">Combine output records</option>
	   			</select>
	   			<span id="aggry2">
			   	 Aggr: <select name="aggry2" class="form-control">
			   	 			<option value="SUM">Sum</option>
			   	 			<option value="AVG">Average</option>
			   	 			<option value="STDDEV_POP">Standard deviation</option>
			   	 			<option value="VAR_POP">Variance</option>
			   	 		</select>
	   			</span>
	   		</div>
	   	</div>
	    <div class="col-md-2">
	   <input type="hidden" id="selexecs" name="execs[]" value="{{ execs }}" />
	   <button type="submit"class="btn btn-success">Update</button>
	   <a style="font-decoration: none; color: white;" href="?" class="btn btn-warning">Reset filters</a>
	   </div>
	 </div>
   <div id="chart"></div>
 </div>
 {% include "common/config_filters.html.twig" %} 
 <div style="clear: both; width: 30%; border: 2px black;" id="sw_filters">
	<h2 class="compare body" style="text-align: center; margin-bottom: .2em;">
		Software filters<br />
		<a id="resetsw" style="cursor: pointer;">(reset)</a>
	</h2>
{# 	<div class="row">#}
{# 		I/O Sort MB {{ makeTooltip('The total amount of buffer memory to use while sorting files, in megabytes. By default, gives each merge stream 1MB, which should minimize seeks.') | raw }}:#}
{# 		<span class="regular">#}
{# 			<b style="margin-right: 1em;">100</b>#}
{# 			<input default="100" name="io.sort.mb" type="text" class="sw-slider" value="20" data-slider-min="0" data-slider-max="1000" data-slider-step="1"/>#}
{# 		</span>#}
{# 	</div>#}
	<div class="row">
		HDFS Block Size (MB):
		<span class="interval">
			<b style="margin-right: 1em;">{{ dfsBlkSizeMin / 1048576 | default('64') }}</b>
			<input default="{{ dfsBlkSize | default('[64,256]') }}" name="dfsblocksize" type="text" class="sw-slider" value="{{ dfsBlkSize | default('[64,256]')}}" data-slider-min="64" data-slider-max="256" data-slider-step="1" data-slider-value="{{ dfsBlkSize | default('[64,256]') }}"/>
			<b style="margin-left: 1em;">{{ dfsBlkSizeMax / 1048576 | default ('256') }}</b>
		</span>
	</div>
	<div class="row">
		Map tasks {{ makeTooltip('The default number of map tasks per job.') | raw }}:
		<span class="interval">
			<b style="margin-right: 1em;">{{ mapTasksMin | default('1') }}</b>
			<input default="{{ mapTasks | default('[1,256]') }}" name="mapredmaptasks" type="text" class="sw-slider" value="{{ mapTasks | default('[1,256]')}}" data-slider-min="0" data-slider-max="2000" data-slider-step="1" data-slider-value="{{ mapTasks | default('[1,256]') }}"/>
			<b style="margin-left: 1em;">{{ mapTasksMax | default('256') }}</b>
		</span>
	</div>
	<div class="row">
		Reduce tasks {{ makeTooltip('The default number of reduce tasks per job.') | raw }}:
		<span class="interval">
			<b style="margin-right: 1em;">{{ redTasksMin | default('1') }}</b>
			<input default="{{ redTasks | default('[1,256]') }}" name="mapredreducetasks" type="text" class="sw-slider" value="{{ redTasks | default('[1,256]') }}" data-slider-min="0" data-slider-max="256" data-slider-step="1" data-slider-value="{{ redTasks | default('[1,256]') }}"/>
			<b style="margin-left: 1em;">{{ redTasksMax | default('256') }}</b>
		</span>
	</div>
 </div>
</form>
 
{% endblock %}
{% block javascript %}
    {{ parent() }}
    <script src="//code.highcharts.com/highcharts.js"></script>
    <script src="//code.highcharts.com/modules/exporting.js"></script>
    <script src="//code.highcharts.com/modules/no-data-to-display.js"></script>
    <script src="js/datatables/extras/export-csv/export-csv.js"></script>
    <script src="js/bootstrap-slider/js/bootstrap-slider.js"></script>
    <script type="text/javascript">
	 $(document).ready(function() {
		 /** Software filters init */
		 $("#resethw").click(function() {
			$("#hw_filters select").each(function() {
				$(this).val("None");
			});
		 });

		 $("#resetsw").click(function() {
			$("#sw_filters input").each(function() {
				$(this).slider('setValue',$(this).attr('default'));
			});
		 });
			
		 $(".sw-slider").each(function() { 
			 $(this).slider({'tooltip': 'hide'}).on('slide', function() {
				if($(this).parent().hasClass('regular'))
					$(this).parent().find('b').first().text($(this).slider('getValue'));
				else {
					var range = $(this).slider('getValue');
					$(this).parent().find('b').first().text(range[0]);
					$(this).parent().find('b').eq(1).text(range[1]);
				}
				$(this).parent().find('input').val('['+$(this).slider('getValue')+']');
			 });
		 });
		 
		 $(".regular input").change(function() {
			$(this).parent().find('b').first().text($(this).val());
		 });
		 
		 /* getting options selected through GET */
		 function parse(val) {
			    var result = "Not found",
			        tmp = [];
			    location.search
			    //.replace ( "?", "" ) 
			    // this is better, there might be a question mark inside
			    .substr(1)
			        .split("&")
			        .forEach(function (item) {
			        tmp = item.split("=");
			        if (tmp[0] === val) result = decodeURIComponent(tmp[1]);
			    });
			    return result;
		}
		var getX = parse('metricax').replace('+',' ').replace('+',' ');
		var getY = parse('metricay').replace('+',' ').replace('+',' ');
		var getOpx = parse('opx');
		var getOpy = parse('opy');
		var getX2 = parse('metricax2').replace('+',' ').replace('+',' ');
		var getY2 = parse('metricay2').replace('+',' ').replace('+',' ');
		var aggry = parse('aggry');
		var aggry2 = parse('aggry2');
		var aggrx = parse('aggrx');
		var aggrx2 = parse('aggrx2');
		var getExecs = parse('execs%5B%5D');
		if(getExecs == 'Not found')
			getExecs = '{{ execs }}';

		if(getX == 'Not found')
			getX = 'e.exe_time';
		if(getY == 'Not found')
			getY = 'e.maps';
		
		
		$('select[name="metricax"] option[value="'+getX+'"]').attr('selected','selected');
		$('select[name="metricay"] option[value="'+getY+'"]').attr('selected','selected');
		$('select[name="opy"] option[value="'+getOpy+'"]').attr('selected','selected');
		$('select[name="opx"] option[value="'+getOpx+'"]').attr('selected','selected');
	    $('select[name="metricax2"] option[value="'+getX2+'"]').attr('selected','selected');
		$('select[name="metricay2"] option[value="'+getY2+'"]').attr('selected','selected');
		$('select[name="metricay2"] option[value="'+getY2+'"]').attr('selected','selected'); 
		$('select[name="aggry"] option[value="'+aggry+'"]').attr('selected','selected');
		$('select[name="aggry2"] option[value="'+aggry2+'"]').attr('selected','selected');
		$('select[name="aggrx"] option[value="'+aggrx+'"]').attr('selected','selected');
		$('select[name="aggrx2"] option[value="'+aggrx2+'"]').attr('selected','selected');

		/* Setting aggr values */
		 var lastSelAggrY,lastSelAggrY2,lastSelAggrX,lastSelAggrX2 = null;
		 $('select[name="metricay"]').change(function() {
			if($(this).find(':selected').attr('aggr')) {
				$('#aggry').show();
				if($('select[name="aggry"]').val() == null) {
					if(lastSelAggrY != null)
						$('select[name="aggry"]').val(lastSelAggrY);
					else
						$('select[name="aggry"]').val('SUM');
				}
			} else {
				lastSelAggrY = $('select[name="aggry"]').val();
				$('#aggry').hide();
				$('select[name="aggry"]').val(' ');
			}
		 });

		 if(!$('select[name="metricay"]').find(':selected').attr('aggr')) {
			 $('#aggry').hide();
			 $('select[name="aggry"]').val(' ');
	     } else
		     $("#aggry").show();

		 $('select[name="metricay2"]').change(function() {
				if($(this).find(':selected').attr('aggr')) {
					$('#aggry2').show();
					if($('select[name="aggry2"]').val() == null) {
						if(lastSelAggrY2 != null)
							$('select[name="aggry2"]').val(lastSelAggrY2);
						else
							$('select[name="aggry2"]').val('SUM');
					}
				} else {
					lastSelAggrY2 = $('select[name="aggry2"]').val();
					$('#aggry2').hide();
					$('select[name="aggry2"]').val(' ');
				}
			 });

			 if(!$('select[name="metricay2"]').find(':selected').attr('aggr')) {
				 $('#aggry2').hide();
				 $('select[name="aggry2"]').val(' ');
		     } else
			     $("#aggry2").show();

			 $('select[name="metricax"]').change(function() {
					if($(this).find(':selected').attr('aggr')) {
						$('#aggrx').show();
						if($('select[name="aggrx"]').val() == null) {
							if(lastSelAggrX != null)
								$('select[name="aggrx"]').val(lastSelAggrX);
							else
								$('select[name="aggrx"]').val('SUM');
						}
					} else {
						lastSelAggrX = $('select[name="aggrx"]').val();
						$('#aggrx').hide();
						$('select[name="aggrx"]').val(' ');
					}
				 });

				 if(!$('select[name="metricax"]').find(':selected').attr('aggr')) {
					 $('#aggrx').hide();
					 $('select[name="aggrx"]').val(' ');
			     } else
				     $("#aggrx").show();

				 $('select[name="metricax2"]').change(function() {
						if($(this).find(':selected').attr('aggr')) {
							$('#aggrx2').show();
							if($('select[name="aggrx2"]').val() == null) {
								if(lastSelAggrX2 != null)
									$('select[name="aggrx2"]').val(lastSelAggrX2);
								else
									$('select[name="aggrx2"]').val('SUM');
							}
						} else {
							lastSelAggrX2 = $('select[name="aggrx2"]').val();
							$('#aggrx2').hide();
							$('select[name="aggrx2"]').val(' ');
						}
					 });

					 if(!$('select[name="metricax2"]').find(':selected').attr('aggr')) {
						 $('#aggrx2').hide();
						 $('select[name="aggrx2"]').val(' ');
				     } else
					     $("#aggrx2").show();

	     /* Highcharts */
		 	var metricaX = $('select[name="metricax"]').find(':selected').text();
		 	var metricaY = $('select[name="metricay"]').find(':selected').text();
		 	var metricaXUnit = $('select[name="metricax"]').find(':selected').attr('unit');
		 	var metricaYUnit = $('select[name="metricay"]').find(':selected').attr('unit');
		 	var metricaX2 = $('select[name="metricax2"]').find(':selected').text();
		 	var metricaY2 = $('select[name="metricay2"]').find(':selected').text();
		 	var metricaX2Unit = $('select[name="metricax2"]').find(':selected').attr('unit');
		 	var metricaY2Unit = $('select[name="metricay2"]').find(':selected').attr('unit');
		 	var titleX,titleY,unitX,unitY = null;
		 	titleX = metricaX;
		 	unitX = metricaXUnit;
		 	if(getOpx != '' && getOpx != 'Not found') {
			 	titleX += getOpx + metricaX2;
			 	unitX += getOpx + metricaX2Unit;
		 	}
		 	titleY = metricaY;
		 	unitY = metricaYUnit;
			if(getOpy != '' && getOpy != 'Not found') {
				titleY += getOpy + metricaY2;
				unitY += getOpy + metricaY2Unit;
			}
			
		    $('#chart').highcharts({
		        chart: {
		            type: 'scatter',
		            zoomType: 'xy',
			        events: {
				        load: function() {
							var series = this.series;
							for (var i = 0; i < series.length; i++)
						    {
						        if (getExecs.indexOf(series[i].name) == -1)
						        {
						            series[i].setVisible(false);
						        } 
						    }
						    this.redraw();
					    }
				    }
		        },
		        title: {
		            text: titleX + ' versus ' + titleY
		        },
		        xAxis: {
		            title: {
		                enabled: true,
		                text: titleX
		            },
		            startOnTick: true,
		            endOnTick: true,
		            showLastLabel: true
		        },
		        yAxis: {
		            title: {
		                text: titleY
		            }
		        },
// 		        legend: {
//                     layout: 'vertical',
//                             align: 'right',
//                             verticalAlign: 'top',
//                             x: -5,
//                             y: 100,
//                             floating: true,
//                             borderWidth: 1,
//                             backgroundColor: (Highcharts.theme && Highcharts.theme.legendBackgroundColor || '#FFFFFF'),
//                             shadow: true,
//                             title: {
//                         text: ':: Drag Legend ::',
//                     },
//                     draggable: true,
//                 },
		        credits: {
			        enabled: false
			    },
		        plotOptions: {
		            scatter: {
		                marker: {
		                    radius: 5,
		                    states: {
		                        hover: {
		                            enabled: true,
		                            lineColor: 'rgb(100,100,100)'
		                        }
		                    }
		                },
		                states: {
		                    hover: {
		                        marker: {
		                            enabled: false
		                        }
		                    }
		                },
		                tooltip: {
 		                    headerFormat: '<b>{series.name}</b><br>',
		                    pointFormat: '{point.x} '+unitX+', {point.y} '+unitY + '<br />{point.exec}',
		                }
		            },
		            series: {
						events: {
							legendItemClick: function(e) {
								var bench = this.name;
								var selected = $("#selexecs").val();
								var array = selected.split(',');
								var found = -1;
								for(var i = 0; i< array.length; ++i) {
									if(array[i] == bench)
										found = i;
								}
								if(found != -1)
									array.splice(found,1);
								else
									array.push(bench);

								array.join();
								$("#selexecs").val(array);
							}
						},
			        }
		        },
		        series: {{ series | raw }}
		    });
	 });
    </script>
{% endblock %}
