{% extends "layout.html.twig" %} 
{% block stylesheet %} {{ parent() }}
	<style type="text/css">
        @import "js/datatables.new/media/css/demo_table.css";
        @import "js/datatables.new/media/css/jquery.dataTables.css";
        @import "js/datatables.new/extensions/ColReorder/media/css/ColReorder.css";
        @import "js/datatables.new/extensions/TableTools/media/css/TableTools.css";
        @import "js/datatables.new/extensions/ColVis/media/css/ColVis.css";
        .scrollStyle
        {
            overflow-x: auto;
	    float: left;
            width: 100%;
        }
	</style>
{% endblock %}
{% block content %}
	<div id="jsonError" class="alert alert-danger" role="alert" style="display: none; text-align: center; font-weight: bold;">
		<p></p>
	</div>
	<div id="introduction" style="float: left; width: 100%;">
		<p style="text-align:justify"><b>Modeling Data</b>: This tool is in charge of creating models and predictors for Hadoop datasets. Using machine learning algorithms, this tool creates a model from the data-set of executions selected through the right panel. Then returns a model (kept in the system), and the result of testing the model against a sample of executions to check its accuracy. Our methodology uses the 50% of the selected executions as training (tr), a 25% for validating the model (tv), and a 25% to test the model (tt).</p>
		<p style="text-align:justify">To use the tool, select the specific set of executions that you want to model at the right menu, the method to train it, and as option if you want the model to admit future not-seen-yet values. Then observe how the quality of the model in the chart below. [MAE: Mean Absolute Error, RAE: Relative Absolute Error]</p>
	<hr />
	</div>
	<div id="stuff" style="float: left; width: 68%;">

		<div id="instructions" style="float: left; width: 100%; display: none">
			<p style='float: left; width: 100%; margin-top: 50px; vertical-align: middle; text-align: justify;'>
				<h4 class="panel-title">Instructions:</h4>
				<table width="100%" style="border-collapse:separate; border-spacing:1em;">
				<tr><td width='50px'>&nbsp;</td><td>This tool will <b>create Machine Learning models</b> from the selected executions</td></tr>
				<tr><td width='50px' valign="top">1 -</td><td>Select from the <b>Filters Box</b> (right box):<br/>1) The executions to be filtered by chosing the value constraints per each attribute (if no value selected, all will be added to the combination)<br/>2) The method that will be used to generate the model<br/>3) Optionally, check if the generated model shall accept new values for attributes in the future (attempting to predict them) or fix the values, so new values for attributes will be rejected when using this model</td></tr>
				<tr><td width='50px' valign="top">2 -</td><td>Click on <b>Learn Model</b>, and wait until the data is processed and the model created. Take into account that the bigger the data-set selected, the longer can take to process.</td></tr>
				<tr><td width='50px' valign="top">3 -</td><td><b>Wait</b> until the navigator refreshes, and processes the received data.</td></tr>
				<tr><td width='50px' valign="top">4 -</td><td>Results will appear as:<br/>
					a) A <b>chart</b> showing the real values of execution time vs. predicted values of execution time. The closer (horizontally) to the x=y line, the better. Mispredictions and outliers will be far from the line.<br/>
					b) The <b>expected errors</b> given by the model on training, validation and test (this is the important).<br/> 
				</td></tr>
				</table>
			</p>
			<hr/>
			<hr/>
			<h4 class="panel-title">Recently created models in cache: <a id="displayText" href="javascript:toggle('learndiv','displayText');">show</a></h4><br/> 
			<div id="learndiv" style="float: left; width: 100%; display:none;">
				<table id="learntable" cellpadding="0" cellspacing="0" border="0" class="display" width="100%"><thead></thead></table>
			</div>
		</div>

		<div id="chart" style="float: left; width: 100%;"></div>
		<div id="information" style="float: left; width: 100%;">
			<p>{{error_stats | raw}}</p>
			<p>Model information:
				<ul>
				<li>Model cache ID: {{id_learner|raw}}</li>
				<li>Instance: {{instance|raw}}</li>
				<li>Model Info: {{model_info|raw}}</li>
				<li>Advanced Filters: {{slice_info|raw}}</li>
				</ul>
			</p>
		</div>
	</div>
	<div style="float: right; width: 30%;">
	{% include 'common/config_filters.html.twig' %}
	</div>
	<div style="clear: both;"></div>
{% endblock %}
{% block javascript %} {{ parent() }}
	<script type="text/javascript" language="javascript" src="js/datatables.new/media/js/jquery.dataTables.min.js"></script>
	<script type="text/javascript" language="javascript" src="js/datatables.new/extensions/FixedHeader/js/dataTables.fixedHeader.min.js"></script>
	<script type="text/javascript" language="javascript" src="js/datatables.new/extensions/ColReorder/js/dataTables.colReorder.min.js"></script>
	<script type="text/javascript" language="javascript" src="js/datatables.new/extensions/TableTools/js/dataTables.tableTools.min.js"></script>
	<script type="text/javascript" language="javascript" src="js/datatables.new/extensions/ColVis/js/dataTables.colVis.min.js"></script>

	<script type="text/javascript" src="js/highcharts/js/highcharts.js"></script>
	<script type="text/javascript" src="js/highcharts/js/highcharts-more.js"></script>
	<script type="text/javascript" src="js/utils.js"></script>
	<script type="text/javascript">
	function toggle(divid, textid)
	{
		var ele = document.getElementById(divid);
		var text = document.getElementById(textid);
		if (ele.style.display == "block") { ele.style.display = "none"; text.innerHTML = "show"; }
		else { ele.style.display = "block"; text.innerHTML = "hide"; }

		oTable.fnAdjustColumnSizing();
	}

	$(document).ready(function()
	{
		$('jsonError').innerHTML = "<p>{{message}}</p>";

		document.getElementById('submit').id = 'submitForm';
		$('#submitForm').attr('value', 'Learn Model');
		$("#submitForm").html('Learn Model');

		if ("{{instructions}}" == "YES")
		{
			$('#instructions').show();
			$('#information').hide();

			oTable = $('#learntable').dataTable({
				"lengthMenu": [[5, 25, 50, 100, -1], [5, 25, 50, 100, "All"]],
				"aaData": {{ learners | raw }},
				"columns": {{ header_learners | raw }},
				"columnDefs" : [],
				"sScrollX": "100%",
				"bScrollCollapse": true
			});
			return;
		}

		if ("{{must_wait}}"== "NO")
		{
			$('#controls').show();

			$('#chart').highcharts( {
	    		        chart: { type: 'scatter', zoomType: 'xy' },
	    		        title: { text: 'Predicted Exec.Time vs Real Exec.Time' },
	    		        subtitle: { text: 'Predictions' },
	    		        xAxis: {
	    		            title: { enabled: true, text: 'Predicted Execution Time (s)' },
	    		            startOnTick: true,
	    		            endOnTick: true,
	    		            showLastLabel: true
	    		        },
	    		        yAxis: { title: { text: 'Real Execution Time (s)' } },
			        credits: { enabled: false },
	    		        plotOptions: {
				    series: { turboThreshold: 5000 },
	    		            scatter: {
	    		                marker: { radius: 5, states: { hover: { enabled: true, lineColor: 'rgb(100,100,100)' } } },
	    		                states: { hover: { marker: { enabled: false } } },
	    		                tooltip: { headerFormat: '', pointFormat: '<b>{point.mydata}</b> <br/> {point.x} s, {point.y} s' }
	    		            }
	    		        },
	    		        series: [
					{name: 'Exe time', color: 'rgba(223, 83, 83, .5)', data: {{ jsonExecs | raw }}	},
					{type: 'line', name: 'Regression Line', showInLegend: false, color: '#AAA', data: [[{{min_p|raw}},{{min_p|raw}}], [{{max_p|raw}}, {{max_p|raw}}]], marker: {enabled: false}, states: {hover: {lineWidth: 0}}, enableMouseTracking: false }
				]
			});
		}
		else
		{
			$('#chart')[0].innerHTML = "<p style='float: left; width: 100%; margin-top: 50px; vertical-align: middle; text-align: center; font-weight: bold; color: #000; background-color: #80ff80'>Your query is being processed. Please wait<!--<br/>{{instance}}--></p>";
			setInterval( function() { window.location.reload(); }, 300000 );
		}	
	});
    </script>
{% endblock %}
